								********************************
									Diversification Tutorial
								********************************
You'll need to load the following libraries

library(geiger)
library(ape)
library(TreeSim)
library(laser)
library(diversitree)

#############################################################################
Part I: Simulate phylogenies under birth-death process & plot those trees
#############################################################################
Expectations under stochastic branching process model (SBP) models are diffuse 
to a degree that defies intuition, which makes it extremely difficult to detect
departures from expectations.

It is instructive to simulate data under these models to get a sense of the 
variance that occurs stochastically.

We will simulate some trees under a constant birth-death SBP model using the TreeSim 
R package.  For the first run, we will generate 100 trees under a speciation rate of
0.9 and an extinction rate of 0.5, conditioning on the time of the process, 10 units.


We'e going to generate sample of simulated trees with a relatively high extinction 
rate
condition on T = 10
replicates = 100
b = .9
d = .6


#copy and paste  these commands
sim.bd.age(10, 100, 0.9, 0.5) -> simTrees 


Now we'd like to determine what fraction of our trees went extinct.  To do this, 
we're going to again use the sapply function.  The way we're going to do this is 
by asking if the simulation ended up producing a tree (when the entire clade goes 
extinct, the output of the simulation is the number 0 rather than a tree).  To ask 
if a simulation produced a tree, we're going to use the is "phylo" function.


#copy and paste these commands
sapply(1:length(simTrees), function(i) is(simTrees[[i]], "phylo")) -> survivors

We're now going to estimate what fraction of our trees survived to the present day

#copy and paste these commands
sum(survivors)/length(simTrees)

Now let's restrict our attention to those trees that survived to the present day.  
To do this, we're going to make a new list that consists only of those trees that
survived:

#copy and paste these commands
simTrees[survivors] -> simTrees_survivors

To confirm that this worked, we can plot a sample of the surviving trees.  Let's 
just plot the first 10 trees.  

#copy and paste these commands
par(mfcol=c(2,5))
sapply(1:10, function(i) plot(simTrees_survivors[[i]], show.tip.label=FALSE))

Now we want to eliminate extinct taxa from the trees we just generated.  To do 
this, we're going to loop through all of our trees and trim the extinct taxa 
using the "prune.extinct.taxa" command.  We'll save the resulting trees to a 
new list called "simTrees_extantOnly."

#copy and paste these commands
list() -> simTrees_extantOnly
for(i in 1:length(simTrees_survivors))
	{
	prune.extinct.taxa(simTrees_survivors[[i]]) -> simTrees_extantOnly[[i]]
	}

Let's take a look at the trees after deleting these extinct species

#copy and paste these commands
sapply(1:10, function(i) plot(simTrees_extantOnly[[i]], show.tip.label=FALSE))

Now we're ready to start investigating patterns of diversification from a sample
of extant trees.  Let's first take a look at some lineage-through-time plots.  
Note that we're going to use the "log="y"" command to plot lineage accumulation 
on a log axis (recall that we expect lineages to accumulate exponentially)

#copy and paste these commands
par(mfcol=c(2,5)) #generate 2-row, 5-column plotting window
for(i in 1:5)
	{
	plot(simTrees_extantOnly[[i]], show.tip.label=FALSE)
	ltt.plot(simTrees_extantOnly[[i]], log="y")
	}

Now let's estimate birth-death parameters for our trees.  We're only going to 
try to do this for trees that have at least 10 taxa.

#copy and paste these commands
count <- 1
list() -> simTrees_extantOnly10plus
	for(i in 1:length(simTrees_extantOnly))
	{
		if(length(simTrees_extantOnly[[i]]$tip.label)>= 10)
		{
		simTrees_extantOnly[[i]] -> simTrees_extantOnly10plus[[count]]
		count <- count + 1
		}
	}


list() -> BDresults #Generates empty list to store our results
matrix(NA, length(simTrees_extantOnly10plus), 3) -> BDparameters #Generates empty matrix to store parameter values
for(i in 1:length(simTrees_extantOnly10plus))
	{
	branching.times(simTrees_extantOnly10plus[[i]]) -> btimes
	bd(btimes, ai=seq(0.05, 0.99, length.out=20)) -> BDresults[[i]]
	#birthdeath(simTrees_extantOnly[[i]]) -> results[[i]]
	BDresults[[i]]$r1 -> BDparameters[i,1]
	BDresults[[i]]$a -> BDparameters[i,2]
}

par(mfcol=c(1,1))
boxplot(BDparameters[,1], BDparameters[,2])

Now, compare these estimates to the true values of the parameters
Parameter 1 (b-d) = 0.9-0.5 = 0.4
Parameter 2 (b/d) = 0.9/0.5 = 1.8

All of the simulations we've done have assumed diversification rate constancy.  
That is, rates of both speciation and extinction have been constant over time.  
This is obviously not a a very good assumption.  It has been postulated that 
species accumulation tends to plateau over time as niches are filled, either due 
to reduced in speciation rates, increased extinction rates, or some combination 
of the two.  Pybus and Harvey introduced the gamma statistic to address this question.  
We're going to start by estimating the gamma parameter from our simulated datasets.  
Our expectation is that we will recover the positive gamma values typical of clades 
that did not experience a temporal shift in diversification rate over time.

#copy and paste these commands
#Fill in the table with estimates of the gamma parameter
for(i in 1:length(simTrees_extantOnly10plus))
	{
	gammaStat(simTrees_extantOnly10plus[[i]]) -> BDparameters[i,3]
	}



#############################################################################
Part II: Part II: Empirical Examples
#############################################################################

Now let's try running the gamma parameter on some real trees.  Let's start with 
the example of Anolis lizards, a clade that we suspect has slowed over time as 
island niches have been filled.

#copy and paste these commands
read.nexus(file="anolis_GA_BEAST.nex") -> anoleTrees

Let's just take a look at one tree and its associated LTT plot

#copy and paste these commands
par(mfcol=c(2,1))
plot(anolisTrees[[1]])
ltt.plot(anoleTree[[1]], log="y")

Now let's estimate the gamma parameter for each of the trees in our set of trees 
from the posterior distribution of our BEAST analysis

#copy and paste these commands
matrix(NA, 1, length(anoleTree)) -> anolisGamma

for(i in 1:length(anoleTree))
	{
	gammaStat(anoleTree[[i]]) -> anolisGamma[1,i]
	}

Becuase we expect incomplete sampling will simulate a slow-down, we want to use a 
MCCR technique to assess whether the slow-down indicated by the gamma parameter is 
significant given the amount of missing taxa in our dataset.  To run this test, 
we're going to use the following lines:

Let's first get the maximum gamma value from the trees in our posterior distribution.

#copy and paste these commands
max(anolisGamma[1,])
mccrTest(91, 85, 100, max(anolisGamma[1,]))

Next we'll run some analyses on a phylogeny for the plant group, Valerianaceae.

This phylogeny includes 103 of ~300 species, was estimated from ~2800 bp from 
4 gene regions, and was dated using the UCL relaxed clock model implemented in
BEAST.

First let's load the tree into R and generate a LTT plot for the consensus tree.

From the LTT plot, it appears that there was a non-zero extinction rate.

Now let's estimate the composite parameters of the SBP model as we did for the 
simulated trees.

Now let's estimate whether there were any significant shifts in diversification 
rates along internal branches.  We'll do this using the AIC model-fitting method 
implemented in MEDUSA.

Finally, let's run this tree through SymmeTree to assess the degree of among-
lineage diversification rate variation and to identify significant shifts in 
diverfication rates along lineages.

Drag (a copy of) the tree file, Val.tre to the SymmeTREE directory.
Open your terminal and navigat to the program directory.
Execute the program by typing ./SymmeTREE
The main menu will appear.  Type 'c' to navigate to the 'change options' menu.  Now type 'o'
to rename the output file to 'Val.xls'.  The rest of default settings are fine for 
this tree, so type 'd' to return to the main menu.  At the main menu, type 'i' to 
import the tree file, and at the prompt type 'Val.tre' and hit return.

A pile of output will display to the console, and a file called 'Val.xls' will
be generated in the program directory when the analysis is complete.  When the run is
finished, type 'x' to exit.

Open the output file in a spreadsheet program.  There are two main blocks of 
interest--the frst is a cryptic description of the probabilities fo rate shifts along
internal branches (the manual explains how to interpret this output), the other 
summarizes the estimated degree of among-lineage diversification rate variation 
for 5 statistics.

What do these results suggest about diversification rates in this tree?
Have rates varied significantly across lineages?
What are the implications of these results for other methods (for 
parameter estimation, for detecting shifts in diversification rate 
though time, etc.).
Along which branches have diversification rates been inferred to experience 
shifts?
Do these results agree with those inferred using MEDUSA?s
